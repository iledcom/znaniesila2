<?php

// С помощью этой страницы администратор добавляет PDF-файлы на сайт
// Этот сценарий создан в главе 5

// Для управления выводом сообщений об ошибках требуется подключение файла настройки
require('./includes/config.inc.php');

// Если пользователь не зарегистрирован как администратор, выполните перенаправление
redirect_invalid_user('user_admin');

// Подключение к базе данных с помощью ключевого слова require
require(MYSQL);

// Включение файла заголовка
$page_title = 'Добавить PDF-файл';
include('./includes/header.html');

// Массив, предназначенный для хранения сообщений об ошибках
$add_pdf_errors = array();

// Проверка передачи данных формы:
if ($_SERVER['REQUEST_METHOD'] === 'POST') {	

	// Проверка заголовка
	if (!empty($_POST['title'])) {
		$t = escape_data(strip_tags($_POST['title']), $dbc);
	} else {
		$add_pdf_errors['title'] = 'Пожалуйста, введите заголовок!';
	}
	
	// Проверка описания
	if (!empty($_POST['description'])) {
		$d = escape_data(strip_tags($_POST['description']), $dbc);
	} else {
		$add_pdf_errors['description'] = 'Пожалуйста, введите описание!';
	}

	/*
	процедуры верификации проверяют каждое значение, находящееся в обоих полях. Если значения не пусты, то 
	происходит их обработка с помощью функции strip tags() и пользовательской экранирующей функции. Если же 
	значения пусты, то в массив добавляется сообщение об ошибке.
	*/

	// Проверка PDF-файла
	if (is_uploaded_file($_FILES['pdf']['tmp_name']) && ($_FILES['pdf']['error'] === UPLOAD_ERR_OK)) {
	
		// Получение ссылки
		$file = $_FILES['pdf'];
		/*Сразу же после завершения передачи формы данные будут находиться в специальном массиве $_files (благодаря
		полю ввода файла с именем pdf).
		С помощью условных выражений проверяется наличие загруженного файла и отсутствие ошибок, связанных с этим
		файлом. Если оба условия-истинны, то переменная $file преобразуется в сокращенную версию $_files [ 'pdf' ],
		предназначенную для дальнейшего использования.
		*/

		// Вычисление размера файла
		$size = ROUND($file['size']/1024);
		// Верификация размера файла (ограниение 5 Мбайт)
		if ($size > 5120) {
			$add_pdf_errors['pdf'] = 'Размер загруженного файла слишком велик.';
		}

		// Верификация типа файла
		// Создание ресурса
		$fileinfo = finfo_open(FILEINFO_MIME_TYPE);

		// Проверка файла
		if (finfo_file($fileinfo, $file['tmp_name']) !== 'application/pdf') {
			$add_pdf_errors['pdf'] = 'Тип загруженного файла отличен от PDF.';
		}

		// Закрытие ресурса
		finfo_close($fileinfo);

		// В случае отсутствия проблем переместить файл
		if (!array_key_exists('pdf', $add_pdf_errors)) {

			// Создание временного названия tmp_name для файла
			$tmp_name = sha1($file['name']) . uniqid('',true);
	
			// Перемещение файла в выбранную папку с добавлением суффикса _tmp к названию файла
			$dest =  PDFS_DIR . $tmp_name . '_tmp';

			/*
			Чтобы повысить степень безопасности, переименуйте загруженный файл, присвоив ему случайное и трудно
			угадываемое имя. Для выполнения этой операции используется функция sha1(), которая на основе имени файла
			создает 40-символьный хеш- код. Затем этот хеш-код добавляется к имени файла, создавая уникальный
			идентификатор. В результате формируется уникальная случайным образом сгенерированная строка длиной 63
			символа.
			*/

			if (move_uploaded_file($file['tmp_name'], $dest)) {
	
				// Сохранение данных в сеансе для применения в дальнейшем
				$_SESSION['pdf']['tmp_name'] = $tmp_name;
				$_SESSION['pdf']['size'] = $size;
				$_SESSION['pdf']['file_name'] = $file['name'];
	
				// Печать сообщения
				echo '<div class="alert alert-success"><h3>Файл успешно загружен!</h3></div>';
	
			} else {
				trigger_error('Файл не может быть перемещен.');
				unlink ($file['tmp_name']);				
			}

		} // завершение условной конструкции IF для array_key_exists()

		/*
		Функция move_uploaded_file() перемещает только те файлы, которые были загружены с помощью протокола HTTP
		POST, поэтому с помощью этой функции невозможно обрабатывать файлы другого типа. Первый аргумент этой
		функции представляет собой временное имя перемещаемого файла (например, /tmp/php4902). Второй аргумент —
		целевое местоположение файла, включающее название папки и файла.
		В сеансе хранятся три фрагмента информации о файле, которые могут применяться при создании ссылки: новое
		имя файла (без дополнительного суффикса _tmp), размер файла и исходное имя файла. Затем отображается
		сообщение, включающее сведения о завершении обработки файла.
		Если файл переместить невозможно, то вызывается сообщение об ошибке, а загруженный файл удаляется, чтобы
		не “засорять” временную папку.
		*/

	//Если файл не был загружен, то отображается сообщение об ошибке.

	} elseif (!isset($_SESSION['pdf'])) { // отсутствуют загруженные файлы
		switch ($_FILES['pdf']['error']) {
			case 1:
			case 2:
				$add_pdf_errors['pdf'] = 'Размер загруженного файла слишком велик.';
				break;
			case 3:
				$add_pdf_errors['pdf'] = 'Файл был загружен частично.';
				break;
			case 6:
			case 7:
			case 8:
				$add_pdf_errors['pdf'] = 'Файл не может быть загружен из-за системной ошибки.';
				break;
			case 4:
			default: 
				$add_pdf_errors['pdf'] = 'Файл не был загружен.';
				break;
		} // конец блока SWITCH

	} // конец блока $_FILES IF-ELSEIF-ELSE.

	/*
	В руководстве по РНР перечислены коды ошибок, возникающих в процессе загрузки файлов. Поскольку сценарий не
	отображает подробные сведения о возникших ошибках, коды ошибок преобразуются в более информативные сообщения.
	В связи с тем что некоторые коды ошибок, например i и 2 либо 6,7 и 8, имеют одно и то же значение,
	соответствующие пункты блока switch не обрабатываются.
	*/

	//Добавьте PDF-файл в базу данных.

	if (empty($add_pdf_errors)) { // если все OK
		
		// Добавление файла PDF в базу данных
		$fn = escape_data($_SESSION['pdf']['file_name'], $dbc);
		$tmp_name = escape_data($_SESSION['pdf']['tmp_name'], $dbc);
		$size = (int) $_SESSION['pdf']['size'];
		$q = "INSERT INTO pdfs (title, description, tmp_name, file_name, size) VALUES ('$t', '$d', '$tmp_name', '$fn', $size)";
		$r = mysqli_query($dbc, $q);

		/*
		Если ошибки отсутствуют, то выполняется вставка PDF-файла в базу данных. Для выполнения этой операции
		используются три фрагмента информации о файле, которые уже хранятся в сеансе и безопасны для использования в
		запросе (заголовок и описание, которые обработаны с помощью функции mysqli_real_escape_string ()).
		*/

		//После завершения выполнения запроса переименуйте файл
		if (mysqli_affected_rows($dbc) === 1) { //если все выполняется как нужно
			// Переименование временного файла
			$original =  PDFS_DIR . $tmp_name . '_tmp';
			$dest =  PDFS_DIR . $tmp_name;
			rename($original, $dest);
			//Чтобы завершить загрузку файла, удалите суффикс _tmp из его имени.

			// Печать сообщения
			echo '<div class="alert alert-success"><h3>Файл PDF был успешно добавлен!</h3></div>';

			//Чтобы форма не отображала какие-либо существующие значения, выполните их очистку.
			// Очистка массива $_POST
			$_POST = array();

			// Очистка массива $_FILES
			$_FILES = array();

			// Очистка переменных $file и $_SESSION['pdf']
			unset($file, $_SESSION['pdf']);

		} else { // если при выполнении произошел сбой
			trigger_error('Файл PDF не может быть добавлен из-за системной ошибки. Приносим извинения за доставленные неудобства.');
			unlink ($dest);
		}
				
	} // завершение условия IF для $errors
			
} else { // очистка сеанса в запросе GET
	unset($_SESSION['pdf']);	
	/*
	Инструкция else “вступает в игру” при использовании запроса get. В этом случае сценарий очищает произвольные
	потенциальные значения, которые могут присваиваться переменной $_SESSION['pdf']. Это требуется, когда
	администратор выполнил загрузку файла, но столкнулся с другими ошибками. Затем снова щелкните на ссылке
	Добавить PDF-файл (Add PDF).
	*/
} // завершение условия IF для передачи данных

// Подключение сценария form functions, который определяет функцию create_form_input()
require('includes/form_functions.inc.php');
?><h1>Добавление PDF-файла</h1>
<form enctype="multipart/form-data" action="add_pdf.php" method="post" accept-charset="utf-8">

	<input type="hidden" name="MAX_FILE_SIZE" value="5242880">
	
	<fieldset><legend>Чтобы добавить PDF-файл на сайт, заполните поля формы:</legend>

<?php
/*
Одна и та же функция create f orm input () используется для создания заголовка и описания формы. Для обработки
данных файла в форме применяются свойство enctype и метод post. Значение max file size содержит информацию для
браузера и может учитываться либо игнорироваться,
*/
create_form_input('title', 'text', 'Заголовок', $add_pdf_errors); 
create_form_input('description', 'textarea', 'Описание', $add_pdf_errors); 

// Добавление поля загрузки файла
echo '<div class="form-group';

// Добавление классов (по возможности)
if (array_key_exists('pdf', $add_pdf_errors)) {
	echo ' has-error'; 
} else if (isset($_SESSION['pdf'])) {
	echo ' has-success'; 
}
echo '"><label for="pdf" class="control-label">PDF-файл</label><input type="file" name="pdf" id="pdf">';

// Проверка на наличие ошибок
if (array_key_exists('pdf', $add_pdf_errors)) {
	
	echo '<span class="help-block">' . $add_pdf_errors['pdf'] . '</span>';

	} else { // ошибки отсутствуют

	// если файл был создан в процессе предыдущей передачи данных формы, когда имели место другие ошибки,
	// сохранить сведения о файле в сеансе и создать соответствующую заметку		
	if (isset($_SESSION['pdf'])) {
		echo '<p class="lead">Имеется: "' . $_SESSION['pdf']['file_name'] . '"</p>';
	}

} // конец блока IF-ELSE, проверяющего наличие ошибок

echo '<span class="help-block">Только PDF, ограничено 5 Мбайт</span>
</div>';

?>
		<input type="submit" name="submit_button" value="Добавить PDF-файл" id="submit_button" class="btn btn-default" />
	
	</fieldset>

</form> 

<?php // включить HTML-футер
include('./includes/footer.html');
?>